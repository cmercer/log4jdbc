<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
    
    <bean id="dataSourceSpied" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:ORCL" />
        <property name="username" value="scott" />
        <property name="password" value="tiger" />
    </bean>
    
    <!-- 
        To enable SQL logging,  (Better than hibernate trace).
        (1) Create a project dependency on log4jdbc project: (svn://rtsvn1/gastrack/log4jdbc)
        (2) Uncomment this bean in sessionFactory-config.xml. 
        (3) Rename the real dataSource bean to dataSourceSpied
        (4) Start the server.

        arg1: the name of the datasource bean to spy on 
        arg2: SINGLE_LINE is good for human readable SQL
        arg2: MULTI_LINE is better for human readable SQL
        arg2: SINGLE_LINE_TWO_COLUMNS is good for pasting to excel to get table names in first column and full sql in second

    -->

    <bean id="dataSource" class="org.lazyluke.log4jdbc.tools.Log4jdbcProxyDataSource">
        <constructor-arg ref="dataSourceSpied" />
        <constructor-arg value="MULTI_LINE" />
        <!--  
 		-->
    </bean>
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <constructor-arg ref="dataSource" />
    </bean>
    
    
</beans>